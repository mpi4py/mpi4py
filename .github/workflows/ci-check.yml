name: ci-check

on:
  schedule:
    - cron: '0 3 * * 0'
  workflow_call:
    inputs:
      py:
        description: 'Python version'
        required: false
        default: 3
        type: string
  workflow_dispatch:
    inputs:
      py:
        description: 'Python version'
        required: true
        default: 3
        type: string

permissions:
  contents: read

jobs:

  conf:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-latest
          - macos-latest
          - windows-latest

    steps:

    - name: Checkout
      uses: actions/checkout@v4

    - name: Setup Python (${{ github.event.inputs.py || 3 }})
      uses: actions/setup-python@v4
      with:
        python-version: ${{ github.event.inputs.py || 3 }}
        cache: pip
        cache-dependency-path: |
          conf/requirements-build-cython.txt

    - name: Upgrade pip
      run:  python -m pip install -U pip

    - name: Install Python packages (build)
      run:  python -m pip install -U -r conf/requirements-build-cython.txt

    - name: Build package
      run:  python setup.py build
      env:
        MPICFG: nompi
        CFLAGS: -O0

    - name: Check build configuration
      run:  |
        # check nompi pympiconf.h
        cp "src/lib-mpi/pympiconf.h" "conf/nompi/pympiconf.h"
        git diff --exit-code

    - name: Check code generation
      run:  |
        python conf/mpiapigen.py
        git diff --exit-code

  lint:
    runs-on: ubuntu-latest

    steps:

    - name: Checkout
      uses: actions/checkout@v4

    - name: Setup Python (${{ github.event.inputs.py || 3 }})
      uses: actions/setup-python@v4
      with:
        python-version: ${{ github.event.inputs.py || 3 }}
        cache: pip
        cache-dependency-path: |
          conf/requirements-build-cython.txt
          conf/requirements-build-lint.txt

    - name: Upgrade pip
      run:  python -m pip install -U pip

    - name: Install package for linting
      run:  python -m pip install .
      env:
        MPICFG: nompi-fast
        CFLAGS: -O0

    - name: Install Python packages (lint)
      run:  python -m pip install -U -r conf/requirements-lint.txt

    - name: ruff
      run:  ruff conf docs src

    - name: flake8
      run:  flake8 docs src

    - name: flake8 (testsuite)
      run:  flake8 --select=A test

    - name: pylint
      run:  pylint mpi4py

    - name: codespell
      run:  codespell

  type:
    runs-on: ubuntu-latest

    steps:

    - name: Checkout
      uses: actions/checkout@v4

    - name: Setup Python (${{ github.event.inputs.py || 3 }})
      uses: actions/setup-python@v4
      with:
        python-version: ${{ github.event.inputs.py || 3 }}
        cache: pip
        cache-dependency-path: |
          conf/requirements-build-cython.txt
          conf/requirements-build-type.txt

    - name: Upgrade pip
      run:  python -m pip install -U pip

    - name: Install package for typing
      run:  python -m pip install .
      env:
        MPICFG: nompi-fast
        CFLAGS: -O0

    - name: Check stub generation
      run:  |
        python conf/mpistubgen.py
        git diff --exit-code

    - name: Install Python packages (type)
      run:  python -m pip install -U -r conf/requirements-type.txt

    - name: mypy (typecheck)
      run:  |
        mypy --python-version 3.11 -p mpi4py
        mypy --python-version 3.10 -p mpi4py
        mypy --python-version 3.9  -p mpi4py
        mypy --python-version 3.8  -p mpi4py

    - name: mypy (stubtest)
      run:  stubtest mpi4py
              ${{ github.event.inputs.py == '3.8' && '$(
              echo mpi4py.*.Executor.submit > allowlist &&
              echo --allowlist=allowlist )' || '' }}
