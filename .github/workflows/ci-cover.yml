name: ci-cover

on:  # yamllint disable-line rule:truthy
  workflow_call:
    inputs:
      py:
        description: 'Python version'
        required: false
        default: 3
        type: string
  workflow_dispatch:
    inputs:
      py:
        description: 'Python version'
        required: true
        default: 3
        type: string

permissions:
  contents: read

env:
  MPI4PY_COVERAGE_PLUGIN: cycoverage
  PYTHONPATH: ${{ github.workspace }}/conf

jobs:

  cover:
    runs-on: ubuntu-latest
    timeout-minutes: 15
    strategy:
      fail-fast: false
      matrix:
        mpi:
          - mpich
          - openmpi
        py:
          - ${{ github.event.inputs.py || 3 }}
    defaults:
      run:
        shell: bash -el {0}

    steps:

    - uses: step-security/harden-runner@v2
      with:
        egress-policy: audit

    - uses: actions/checkout@v5

    - uses: actions/setup-python@v6
      with:
        python-version: ${{ matrix.py }}
        cache: pip
    - run: >-
          python -m pip install
          setuptools
          cython
          coverage
          ${{ matrix.mpi }}
          numpy

    - run: python -m pip install .
      env:
        CFLAGS: -O0
        CPPFLAGS: -O0 -Wp,-U_FORTIFY_SOURCE
        PIP_VERBOSE: 3
        PIP_NO_CACHE_DIR: true
        PIP_NO_BUILD_ISOLATION: false  # pypa/pip#5735
        PIP_DISABLE_PIP_VERSION_CHECK: true

    - name: Tweak MPI
      run: |
        openmpi_mca_params=$HOME/.openmpi/mca-params.conf
        mkdir -p $(dirname $openmpi_mca_params)
        echo plm_ssh_agent=false >> $openmpi_mca_params
        echo pml=ob1 >> $openmpi_mca_params
        echo btl=tcp,self >> $openmpi_mca_params
        echo mpi_yield_when_idle=true >> $openmpi_mca_params
        echo btl_base_warn_component_unused=false >> $openmpi_mca_params
        prte_mca_params=$HOME/.prte/mca-params.conf
        mkdir -p $(dirname $prte_mca_params)
        echo rmaps_default_mapping_policy=:oversubscribe >> $prte_mca_params

    - name: Run coverage
      run:  test/coverage.sh

    - name: Prepare coverage data
      run:  mv .coverage .coverage.${TAG}
      env:
        TAG: ${{ runner.os }}.${{ matrix.mpi }}.py${{ matrix.py }}

    - name: Upload coverage data
      uses: actions/upload-artifact@v5
      with:
        name: coverage-data-${{ runner.os }}-${{ matrix.mpi }}-${{ matrix.py }}
        path: ".coverage.*"
        if-no-files-found: ignore
        include-hidden-files: true

  report:
    runs-on: ubuntu-latest
    needs: cover
    if: always()

    steps:

    - uses: step-security/harden-runner@v2
      with:
        egress-policy: audit

    - uses: actions/checkout@v5

    - uses: actions/setup-python@v6
      with:
        python-version: ${{ github.event.inputs.py || 3 }}
        cache: pip
    - run: >-
          python -m pip install
          cython
          coverage

    - run: python conf/cythonize.py

    - name: Download coverage data
      uses: actions/download-artifact@v6
      with:
        pattern: coverage-data-*
        merge-multiple: true

    - name: Report coverage
      run: |
        python -m coverage combine
        python -m coverage html
        python -m coverage xml
        python -m coverage report --format=markdown >> $GITHUB_STEP_SUMMARY
        python -m coverage report --fail-under=100

    - name: Upload HTML report
      uses: actions/upload-artifact@v5
      with:
        name: coverage-html
        path: htmlcov
      if: failure()
