name: ci-build

on:
  schedule:
    - cron: '0 3 * * 0'
  workflow_call:
    inputs:
      py:
        description: 'Python version'
        required: false
        default: 3
        type: string
  workflow_dispatch:
    inputs:
      py:
        description: 'Python version'
        required: true
        default: 3
        type: string

permissions:
  contents: read

jobs:

  skbuild:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-22.04
          - ubuntu-20.04
          - macos-12
          - macos-11
        mpi:
          - mpich
          - openmpi
          - intelmpi
        exclude:
          - os:  macos-12
            mpi: intelmpi
          - os:  macos-11
            mpi: intelmpi
        include:
          - os:  windows-2022
            mpi: intelmpi
          - os:  windows-2019
            mpi: intelmpi
          - os:  windows-2022
            mpi: msmpi
          - os:  windows-2019
            mpi: msmpi

    steps:

    - name: Checkout
      uses: actions/checkout@v3

    - name: Setup MPI (${{ matrix.mpi }})
      uses: mpi4py/setup-mpi@v1
      with:
        mpi: ${{ matrix.mpi }}

    - name: Setup Python (${{ github.event.inputs.py || 3 }})
      uses: actions/setup-python@v4
      with:
        python-version: ${{ github.event.inputs.py || 3 }}

    - name: Install Python packages (build)
      run:  python -m pip install build

    - name: Build sdist and wheel
      run:  python -m build
      env:
        MPI4PY_BUILD_BACKEND: skbuild
        MPI4PY_LOCAL_VERSION: ${{ matrix.mpi }}

    - name: Upload wheel
      uses: actions/upload-artifact@v3
      with:
        name: mpi4py-skbuild-${{ matrix.os }}
        path: dist/mpi4py-*.whl

    - name: Install wheel
      run:  python -m pip install mpi4py
              --verbose --no-index --find-links=dist

    - name: Test wheel after install (test_package)
      run:  mpiexec -n 1 python test/main.py test_package

    - name: Test wheel after install (helloworld)
      run:  mpiexec -n 2 python -m mpi4py.bench helloworld

    - name: Uninstall wheel after testing
      run:  python -m pip uninstall mpi4py
              --verbose --yes

    - name: Install package (pip)
      run:  python -m pip install .
              --verbose
      env:
        MPI4PY_BUILD_BACKEND: skbuild
        MPI4PY_LOCAL_VERSION: ${{ matrix.mpi }}

    - name: Test package after install (test_package)
      run:  mpiexec -n 1 python test/main.py test_package

    - name: Test package after install (helloworld)
      run:  mpiexec -n 2 python -m mpi4py.bench helloworld

    - name: Uninstall package after testing
      run:  python -m pip uninstall mpi4py
              --verbose --yes

  mesonpy:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-22.04
          - ubuntu-20.04
          - macos-12
          - macos-11
        mpi:
          - mpich
          - openmpi
          - intelmpi
        exclude:
          - os:  macos-12
            mpi: intelmpi
          - os:  macos-11
            mpi: intelmpi

    steps:

    - name: Checkout
      uses: actions/checkout@v3

    - name: Setup MPI (${{ matrix.mpi }})
      uses: mpi4py/setup-mpi@v1
      with:
        mpi: ${{ matrix.mpi }}

    - name: Setup Python (${{ github.event.inputs.py || 3 }})
      uses: actions/setup-python@v4
      with:
        python-version: ${{ github.event.inputs.py || 3 }}

    - name: Install Python packages (build)
      run:  python -m pip install build

    - name: Build sdist and wheel
      run:  python -m build
      env:
        MPI4PY_BUILD_BACKEND: mesonpy
        MPI4PY_LOCAL_VERSION: ${{ matrix.mpi }}

    - name: Upload wheel
      uses: actions/upload-artifact@v3
      with:
        name: mpi4py-meson-${{ matrix.os }}
        path: dist/mpi4py-*.whl

    - name: Install wheel
      run:  python -m pip install mpi4py
              --verbose --no-index --find-links=dist

    - name: Test wheel after install (test_package)
      run:  mpiexec -n 1 python test/main.py test_package

    - name: Test wheel after install (helloworld)
      run:  mpiexec -n 2 python -m mpi4py.bench helloworld

    - name: Uninstall wheel after testing
      run:  python -m pip uninstall mpi4py
              --verbose --yes

    - name: Install package (pip)
      run:  python -m pip install .
              --verbose
      env:
        MPI4PY_BUILD_BACKEND: mesonpy
        MPI4PY_LOCAL_VERSION: ${{ matrix.mpi }}

    - name: Test package after install (test_package)
      run:  mpiexec -n 1 python test/main.py test_package

    - name: Test package after install (helloworld)
      run:  mpiexec -n 2 python -m mpi4py.bench helloworld

    - name: Uninstall package after testing
      run:  python -m pip uninstall mpi4py
              --verbose --yes
