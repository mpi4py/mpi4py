# Tox (https://tox.readthedocs.io) is a tool for running tests
# in multiple virtualenvs. This configuration file will run the
# test suite on all supported python versions. To use it,
# "pip install tox" and then run "tox" from this directory.

[tox]
minversion = 3.18.0
skip_missing_interpreters=True
envlist =
    py36
    py37
    py38
    py39
    py310
    py311
    py312
    pypy3.7
    pypy3.8
    pypy3.9

[mpi]
mpiexec = {env:MPIEXEC:mpiexec}

[testenv]
deps = -r{toxinidir}/conf/requirements-test.txt
allowlist_externals = {[mpi]mpiexec}
commands =
    {[mpi]mpiexec} -n 1 {envpython} -m mpi4py --version
    {[mpi]mpiexec} -n 5 {envpython} -m mpi4py -m mpi4py.bench helloworld
    {[mpi]mpiexec} -n 5 {envpython} -m mpi4py -m mpi4py.bench ringtest
    {[mpi]mpiexec} -n 5 {envpython} -m mpi4py -m mpi4py.bench pingpong -q -n 4096
    {[mpi]mpiexec} -n 5 {envpython} -m mpi4py -m mpi4py.bench futures  -q -n 4096
    {[mpi]mpiexec} -n 1 {envpython} {toxinidir}/test/runtests.py --no-builddir -q -e spawn []
    {[mpi]mpiexec} -n 5 {envpython} {toxinidir}/test/runtests.py --no-builddir -q -e spawn []
    {[mpi]mpiexec} -n 1 {envpython} {toxinidir}/demo/futures/test_futures.py -q []
    {[mpi]mpiexec} -n 5 {envpython} {toxinidir}/demo/futures/test_futures.py -q []
    {[mpi]mpiexec} -n 1 {envpython} -m mpi4py.futures {toxinidir}/demo/futures/test_futures.py -q []
    {[mpi]mpiexec} -n 5 {envpython} -m mpi4py.futures {toxinidir}/demo/futures/test_futures.py -q []
    {envpython} {toxinidir}/demo/test-run/test_run.py -q []

[testenv:code]
deps = cython
skip_install = true
allowlist_externals = sh,mv
setenv =
    MPICFG=nompi
commands =
    {envpython} conf/mpiscanner.py
    sh -c '{envpython} setup.py --quiet build --force 2> /dev/null'
    mv src/lib-mpi/config/config.h conf/nompi/config/config.h
    {envpython} setup.py --quiet install
    {envpython} conf/mpistubgen.py

[testenv:conf]
deps = cython
skip_install = true
allowlist_externals = diff
setenv =
    MPICFG=nompi
commands =
    {envpython} setup.py build -b build/conf --force
    diff -u conf/nompi/config/config.h src/lib-mpi/config/config.h

[testenv:lint]
deps = -r{toxinidir}/conf/requirements-lint.txt
setenv =
    MPICFG=nompi-fast
    CFLAGS=-O0
commands =
    flake8 {toxinidir}/src/mpi4py
    flake8 --select=A {toxinidir}/test
    pylint mpi4py

[testenv:type]
deps = -r{toxinidir}/conf/requirements-type.txt
setenv =
    MPICFG=nompi-fast
    CFLAGS=-O0
commands =
    stubtest mpi4py
    mypy --python-version 3.8  -p mpi4py
    mypy --python-version 3.9  -p mpi4py
    mypy --python-version 3.10 -p mpi4py
    mypy --python-version 3.11 -p mpi4py

[cmd]
rst2html5 = rst2html5.py --config=conf/docutils.conf

[testenv:docs]
deps =
    sphinx
allowlist_externals =
    rm
    mv
setenv =
    MPICFG=nompi-fast
    CFLAGS=-O0
    TOPDIR=
    DOCDIR=docs/
    SRCDIR=docs/source/
    BLDDIR=build/
    OUTDIR=docs/
    LATEXMKOPTS=-quiet
commands_pre =
    rm -rf {env:OUTDIR}html
commands =
    {[cmd]rst2html5} {env:DOCDIR}index.rst {env:OUTDIR}index.html
    sphinx-build -M html     {env:SRCDIR} {env:BLDDIR} -q -W -j auto
    sphinx-build -M man      {env:SRCDIR} {env:BLDDIR} -q -W -j auto
    sphinx-build -M info     {env:SRCDIR} {env:BLDDIR} -q -W -j auto
    sphinx-build -M latexpdf {env:SRCDIR} {env:BLDDIR} -q -W -j auto
    rm {env:BLDDIR}html/.buildinfo
    mv {env:BLDDIR}html                {env:OUTDIR}
    mv {env:BLDDIR}man/mpi4py.3        {env:OUTDIR}
    mv {env:BLDDIR}texinfo/mpi4py.info {env:OUTDIR}
    mv {env:BLDDIR}latex/mpi4py.pdf    {env:OUTDIR}

[testenv:sdist]
deps =
skip_install = true
depends = docs
allowlist_externals = test
commands_pre =
    test -f docs/index.html
    test -d docs/html
    test -f docs/mpi4py.3
    test -f docs/mpi4py.info
    test -f docs/mpi4py.pdf
commands =
    {envpython} setup.py -q sdist
